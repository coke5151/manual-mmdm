name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ github.ref_name }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows-x64:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"
          architecture: "x64"

      - name: Install PDM
        run: |
          python -m pip install --upgrade pip
          pip install pdm

      - name: Cache PDM packages
        uses: actions/cache@v3
        with:
          path: .pdm-build
          key: ${{ runner.os }}-pdm-x64-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-x64-

      - name: Install dependencies
        run: pdm install

      - name: Build application
        run: pdm run build

      - name: Verify build output
        shell: bash
        run: |
          if [ ! -d "dist/manual-mmdm" ]; then
            echo "Build failed: dist/manual-mmdm directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/_internal" ]; then
            echo "Build failed: _internal directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/static" ]; then
            echo "Build failed: static directory not found"
            exit 1
          fi
          if [ ! -f "dist/manual-mmdm/manual-mmdm.exe" ]; then
            echo "Build failed: manual-mmdm.exe not found"
            exit 1
          fi
          echo "Build output verified successfully"

      - name: Get tag name
        id: get_tag
        shell: bash
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create zip archive
        shell: bash
        run: |
          cd dist
          7z a manual-mmdm-${{ steps.get_tag.outputs.TAG }}-windows-x64.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm.exe

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-windows-x64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows-x86:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"
          architecture: "x86"

      - name: Install PDM
        run: |
          python -m pip install --upgrade pip
          pip install pdm

      - name: Cache PDM packages
        uses: actions/cache@v3
        with:
          path: .pdm-build
          key: ${{ runner.os }}-pdm-x86-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-x86-

      - name: Install dependencies
        run: pdm install

      - name: Build application
        run: pdm run build

      - name: Verify build output
        shell: bash
        run: |
          if [ ! -d "dist/manual-mmdm" ]; then
            echo "Build failed: dist/manual-mmdm directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/_internal" ]; then
            echo "Build failed: _internal directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/static" ]; then
            echo "Build failed: static directory not found"
            exit 1
          fi
          if [ ! -f "dist/manual-mmdm/manual-mmdm.exe" ]; then
            echo "Build failed: manual-mmdm.exe not found"
            exit 1
          fi
          echo "Build output verified successfully"

      - name: Get tag name
        id: get_tag
        shell: bash
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create zip archive
        shell: bash
        run: |
          cd dist
          7z a manual-mmdm-${{ steps.get_tag.outputs.TAG }}-windows-x86.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm.exe

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-windows-x86.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-x64:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"
          architecture: "x64"

      - name: Install PDM
        run: |
          python -m pip install --upgrade pip
          pip install pdm

      - name: Cache PDM packages
        uses: actions/cache@v3
        with:
          path: .pdm-build
          key: ${{ runner.os }}-pdm-x64-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-x64-

      - name: Install dependencies
        run: pdm install

      - name: Build application
        run: pdm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist/manual-mmdm" ]; then
            echo "Build failed: dist/manual-mmdm directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/_internal" ]; then
            echo "Build failed: _internal directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/static" ]; then
            echo "Build failed: static directory not found"
            exit 1
          fi
          if [ ! -f "dist/manual-mmdm/manual-mmdm" ]; then
            echo "Build failed: manual-mmdm executable not found"
            exit 1
          fi
          echo "Build output verified successfully"

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create zip archive
        run: |
          cd dist
          zip -r manual-mmdm-${{ steps.get_tag.outputs.TAG }}-macos-x64.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-macos-x64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-arm64:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install PDM
        run: |
          python -m pip install --upgrade pip
          pip install pdm

      - name: Cache PDM packages
        uses: actions/cache@v3
        with:
          path: .pdm-build
          key: ${{ runner.os }}-pdm-arm64-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-arm64-

      - name: Install dependencies
        run: pdm install

      - name: Modify build script for ARM64
        run: |
          echo 'export ARCHFLAGS="-arch arm64"' >> $HOME/.bash_profile
          source $HOME/.bash_profile

      - name: Build application
        run: pdm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist/manual-mmdm" ]; then
            echo "Build failed: dist/manual-mmdm directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/_internal" ]; then
            echo "Build failed: _internal directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/static" ]; then
            echo "Build failed: static directory not found"
            exit 1
          fi
          if [ ! -f "dist/manual-mmdm/manual-mmdm" ]; then
            echo "Build failed: manual-mmdm executable not found"
            exit 1
          fi
          echo "Build output verified successfully"

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create zip archive
        run: |
          cd dist
          zip -r manual-mmdm-${{ steps.get_tag.outputs.TAG }}-macos-arm64.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-macos-arm64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-universal:
    needs: [build-macos-x64, build-macos-arm64]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install PDM
        run: |
          python -m pip install --upgrade pip
          pip install pdm

      - name: Cache PDM packages
        uses: actions/cache@v3
        with:
          path: .pdm-build
          key: ${{ runner.os }}-pdm-universal-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-universal-

      - name: Install dependencies
        run: pdm install

      - name: Build with Universal Binary
        run: |
          export ARCHFLAGS="-arch x86_64 -arch arm64"
          pdm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist/manual-mmdm" ]; then
            echo "Build failed: dist/manual-mmdm directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/_internal" ]; then
            echo "Build failed: _internal directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/static" ]; then
            echo "Build failed: static directory not found"
            exit 1
          fi
          if [ ! -f "dist/manual-mmdm/manual-mmdm" ]; then
            echo "Build failed: manual-mmdm executable not found"
            exit 1
          fi
          echo "Build output verified successfully"

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create zip archive
        run: |
          cd dist
          zip -r manual-mmdm-${{ steps.get_tag.outputs.TAG }}-macos-universal.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-macos-universal.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux-x64:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"
          architecture: "x64"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libegl1-mesa libxkbcommon-x11-0 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-icccm4 libxcb-shape0

      - name: Install PDM
        run: |
          python -m pip install --upgrade pip
          pip install pdm

      - name: Cache PDM packages
        uses: actions/cache@v3
        with:
          path: .pdm-build
          key: ${{ runner.os }}-pdm-x64-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-x64-

      - name: Install dependencies
        run: pdm install

      - name: Build application
        run: pdm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist/manual-mmdm" ]; then
            echo "Build failed: dist/manual-mmdm directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/_internal" ]; then
            echo "Build failed: _internal directory not found"
            exit 1
          fi
          if [ ! -d "dist/manual-mmdm/static" ]; then
            echo "Build failed: static directory not found"
            exit 1
          fi
          if [ ! -f "dist/manual-mmdm/manual-mmdm" ]; then
            echo "Build failed: manual-mmdm executable not found"
            exit 1
          fi
          echo "Build output verified successfully"

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create zip archive
        run: |
          cd dist
          zip -r manual-mmdm-${{ steps.get_tag.outputs.TAG }}-linux-x64.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-linux-x64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux-arm64:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build in ARM64 container
        uses: addnab/docker-run-action@v3
        with:
          image: arm64v8/python:3.13
          options: -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace
            apt-get update
            apt-get install -y libgl1-mesa-glx libegl1-mesa libxkbcommon-x11-0 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-icccm4 libxcb-shape0 zip
            python -m pip install --upgrade pip
            pip install pdm
            pdm install
            pdm run build

            # Verify build output
            if [ ! -d "dist/manual-mmdm" ]; then
              echo "Build failed: dist/manual-mmdm directory not found"
              exit 1
            fi
            if [ ! -d "dist/manual-mmdm/_internal" ]; then
              echo "Build failed: _internal directory not found"
              exit 1
            fi
            if [ ! -d "dist/manual-mmdm/static" ]; then
              echo "Build failed: static directory not found"
              exit 1
            fi
            if [ ! -f "dist/manual-mmdm/manual-mmdm" ]; then
              echo "Build failed: manual-mmdm executable not found"
              exit 1
            fi

            # Get tag name and create archive
            export TAG="${GITHUB_REF#refs/tags/}"
            cd dist
            zip -r manual-mmdm-${TAG}-linux-arm64.zip manual-mmdm/_internal manual-mmdm/static manual-mmdm/manual-mmdm

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/manual-mmdm-${{ steps.get_tag.outputs.TAG }}-linux-arm64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
